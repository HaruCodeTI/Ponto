// Temporariamente comentado para resolver erro de build
// Temporariamente comentado para resolver erro de build
// import { NextRequest, NextResponse } from 'next/server';
// import { getServerSession } from 'next-auth';
// import { authOptions } from '@/lib/auth';
// import { 
//   createBackup, 
//   findBackupOperations 
// } from '@/lib/secure-storage';

// export async function POST(request: NextRequest) {
//   try {
//     const session = await getServerSession(authOptions);
//     if (!session?.user) {
//       return NextResponse.json({ error: 'Não autorizado' }, { status: 401 });
//     }

//     const body = await request.json();
//     const { entityTypes, operationType, companyId, dateRange } = body;

//     if (!entityTypes || !operationType) {
//       return NextResponse.json(
//         { error: 'Dados obrigatórios não fornecidos' },
//         { status: 400 }
//       );
//     }

//     const backup = await createBackup(
//       entityTypes,
//       operationType,
//       companyId,
//       session.user.id,
//       dateRange
//     );

//     return NextResponse.json(backup);
//   } catch (error) {
//     console.error('Erro ao criar backup:', error);
//     return NextResponse.json(
//       { error: 'Erro interno do servidor' },
//       { status: 500 }
//     );
//   }
// }

// export async function GET(request: NextRequest) {
//   try {
//     const session = await getServerSession(authOptions);
//     if (!session?.user) {
//       return NextResponse.json({ error: 'Não autorizado' }, { status: 401 });
//     }

//     const { searchParams } = new URL(request.url);
//     const operationType = searchParams.get('operationType');
//     const status = searchParams.get('status');
//     const companyId = searchParams.get('companyId');
//     const startDate = searchParams.get('startDate');
//     const endDate = searchParams.get('endDate');
//     const page = parseInt(searchParams.get('page') || '1');
//     const limit = parseInt(searchParams.get('limit') || '50');

//     const filters: any = {};
//     if (operationType) filters.operationType = operationType;
//     if (status) filters.status = status;
//     if (companyId) filters.companyId = companyId;
//     if (startDate) filters.startDate = new Date(startDate);
//     if (endDate) filters.endDate = new Date(endDate);

//     const result = await findBackupOperations(filters, page, limit);

//     return NextResponse.json(result);
//   } catch (error) {
//     console.error('Erro ao buscar operações de backup:', error);
//     return NextResponse.json(
//       { error: 'Erro interno do servidor' },
//       { status: 500 }
//     );
//   }
// }

// Exportação temporária para evitar erro de módulo
export async function GET() {
  return new Response('API temporariamente indisponível', { status: 503 });
} // Exportação temporária para evitar erro de módulo
export async function GET() { return new Response("API temporariamente indisponível", { status: 503 }); }
